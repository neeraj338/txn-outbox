---
server:
  port: 4567
  compression:
    enabled: ${GZIP_COMPRESSION_ENABLED:false}
    min-response-size: 8192

spring:
  application:
    name: demo
  datasource:
    url: jdbc:postgresql://${DB_HOST:192.168.106.4:30032}/${DB_NAME:postgres}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 10
    driver-class-name: org.postgresql.Driver
  main:
    banner-mode: off

  cloud:
    function:
      definition: outboxConsumer
    stream:
      default:
        binder: kafka
      bindings:
        outboxConsumer-in-0:
          destination: com.test.outbox.message.received
          content-type: text/plain
          group: "consumer-group-name"
        outboxConsumer-out-0:
          binder: outbox
          destination: finalDestination-out-0
          content-type: text/plain
        finalDestination-out-0:
          binder: kafka
          destination: test.destination
          content-type: text/plain

      kafka:
        bindings:
          outboxConsumer-in-0:
            consumer:
              enableDlq: false
              autoCommitOffset: false
          finalDestination-out-0:
            producer:
              batchTimeout: ${MERCHANT_ELIGIBILITY_PUSH_TIMEOUT:4000}
              bufferSize: ${MERCHANT_ELIGIBILITY_PUSH_BATCH_SIZE:65536}
      outbox:
        bindings:
          outboxConsumer-out-0:
            producer:

  kafka:
    bootstrap-servers:
      - "192.168.106.4:30092"
    ssl:
      protocol: ${SPRING_KAFKA_SSL_PROTOCOL:PLAINTEXT}
    properties:
      ssl.endpoint.identification.algorithm: ""
      security.protocol: ${SPRING_KAFKA_SSL_PROTOCOL:PLAINTEXT}
    producer:
      acks: all

# Actuator
management:
  endpoints:
    access:
      default: READ_ONLY
  endpoint:
    health:
      access: UNRESTRICTED